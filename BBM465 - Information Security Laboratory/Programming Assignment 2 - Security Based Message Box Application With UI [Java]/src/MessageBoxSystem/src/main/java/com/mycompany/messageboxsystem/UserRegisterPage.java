package com.mycompany.messageboxsystem;

import java.util.ArrayList;
import javax.swing.JOptionPane;

public class UserRegisterPage extends javax.swing.JFrame {
    
    public static final char bullet = '\u2022';
    private boolean isAuthorized = false;

    /**
     * Creates new form UserRegisterPage
     */
    public UserRegisterPage() {
        setTitle("Register User");
        initComponents();
        
        // Initializing system with existing resources
        FileOperations.initializeSystem();
        
        // Converting text inputs (disabling EchoChars)
        jPasswordField3.setEchoChar((char)0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton4 = new javax.swing.JButton();
        jCheckBox2 = new javax.swing.JCheckBox();
        jPasswordField2 = new javax.swing.JPasswordField();
        label7 = new java.awt.Label();
        label8 = new java.awt.Label();
        jPasswordField3 = new javax.swing.JPasswordField();
        jButton5 = new javax.swing.JButton();
        label9 = new java.awt.Label();
        label10 = new java.awt.Label();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 51, 51));
        jButton4.setText("Return Homepage");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jCheckBox2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jCheckBox2.setText("Show Password");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jPasswordField2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        label7.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        label7.setText("Password (*):");

        label8.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        label8.setText("Warning: Username must be unique, password must be at least 7 char.");

        jPasswordField3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jButton5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 51, 51));
        jButton5.setText("Register");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        label9.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        label9.setText("Username (*):");

        label10.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        label10.setText("Warning: Inputs can't contain space, underscore or Turkish characters.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(label8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(label7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(label9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPasswordField3)
                                    .addComponent(jPasswordField2))))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jCheckBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(154, 154, 154))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPasswordField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPasswordField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(label10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // Returning to main page
        this.hide();
        MainPage jf_main = new MainPage();
        jf_main.pack();
        jf_main.setLocationRelativeTo(null);
        jf_main.show();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        // Showing and hiding password of message
        if(jCheckBox2.isSelected() == true) {
            jPasswordField2.setEchoChar((char)0);
        } else {
            jPasswordField2.setEchoChar(bullet);
        }
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        
        // Initializing system with existing resources
        FileOperations.initializeSystem();
        
        isAuthorized = true; 
        
        // 1- Username must not be empty
        boolean isInputWrong = false;
        if(jPasswordField3.getText().length() == 0) {
            isInputWrong = true;
            JOptionPane.showMessageDialog(this, "Username Can't Be Empty! Please check your inputs again.","ERROR", JOptionPane.ERROR_MESSAGE);
        }
        
        // 2- Password length must be longer than 7 characters
        if(jPasswordField2.getText().length() < 7) {
            isInputWrong = true;
            JOptionPane.showMessageDialog(this, "Password Must Be At Least 7 Characters! Please check your inputs again.","ERROR", JOptionPane.ERROR_MESSAGE);
        } 
        
        // 3- Username must be unique
        boolean isUserNameUnique = true;
        if(!isInputWrong) {
            for(int i=0; i<FileOperations.getUsers().size(); i++) {
                if(FileOperations.getUsers().get(i).getUserName().compareTo(jPasswordField3.getText()) == 0){
                    isUserNameUnique = false;
                    JOptionPane.showMessageDialog(this, "This username has taken already! Please select an unique one.","ERROR", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
        
        // 4- Inputs must not contain space
        boolean isContainSpace = false;
        if(isUserNameUnique) {
            if(jPasswordField2.getText().contains(" ") == true || jPasswordField3.getText().contains(" ") == true || jPasswordField2.getText().contains("_") == true || jPasswordField3.getText().contains("_") == true) {
                isContainSpace = true;
            }
            if(isContainSpace) { JOptionPane.showMessageDialog(this, "Inputs Must Not Contain Space or Underscore! Please check your inputs again.","ERROR", JOptionPane.ERROR_MESSAGE); }
        }
        
        // 5- Inputs must not contain Turkish characters
        boolean isContainTRChar = false;
        if(!isContainSpace) {
            if(jPasswordField2.getText().contains("ğ") == true || jPasswordField3.getText().contains("ğ") == true) { isContainTRChar = true; }
            if(jPasswordField2.getText().contains("Ğ") == true || jPasswordField3.getText().contains("Ğ") == true) { isContainTRChar = true; }
            if(jPasswordField2.getText().contains("ç") == true || jPasswordField3.getText().contains("ç") == true) { isContainTRChar = true; }
            if(jPasswordField2.getText().contains("Ç") == true || jPasswordField3.getText().contains("Ç") == true) { isContainTRChar = true; }
            if(jPasswordField2.getText().contains("ş") == true || jPasswordField3.getText().contains("ş") == true) { isContainTRChar = true; }
            if(jPasswordField2.getText().contains("Ş") == true || jPasswordField3.getText().contains("Ş") == true) { isContainTRChar = true; }
            if(jPasswordField2.getText().contains("ü") == true || jPasswordField3.getText().contains("ü") == true) { isContainTRChar = true; }
            if(jPasswordField2.getText().contains("Ü") == true || jPasswordField3.getText().contains("Ü") == true) { isContainTRChar = true; }
            if(jPasswordField2.getText().contains("ö") == true || jPasswordField3.getText().contains("ö") == true) { isContainTRChar = true; }
            if(jPasswordField2.getText().contains("Ö") == true || jPasswordField3.getText().contains("Ö") == true) { isContainTRChar = true; }
            if(jPasswordField2.getText().contains("ı") == true || jPasswordField3.getText().contains("ı") == true) { isContainTRChar = true; }
            if(isContainTRChar) { JOptionPane.showMessageDialog(this, "Inputs Must Not Contain Turkish characters (ğ,ç,ş,ü,ö,ı)! Please check your inputs again.","ERROR", JOptionPane.ERROR_MESSAGE); }
        }
        
        // 5- Determining authorization
        if(isInputWrong || !isUserNameUnique || isContainSpace || isContainTRChar) { isAuthorized = false;}
        
        // 6- Registering user and resetting everything if everything is okay
        if(isAuthorized) {
            User new_user = new User(jPasswordField3.getText(), SecurityFunctions.getMD5Hash(jPasswordField2.getText()));
            ArrayList<User> users = FileOperations.getUsers();
            users.add(new_user);
            FileOperations.setUsers(users);
            jPasswordField2.setText("");
            jPasswordField3.setText("");
            FileOperations.updateUserDatabase();
            JOptionPane.showMessageDialog(this, "User Has Been Added Succesfully!","SUCCESS", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserRegisterPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserRegisterPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserRegisterPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserRegisterPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserRegisterPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JPasswordField jPasswordField2;
    private javax.swing.JPasswordField jPasswordField3;
    private java.awt.Label label10;
    private java.awt.Label label7;
    private java.awt.Label label8;
    private java.awt.Label label9;
    // End of variables declaration//GEN-END:variables
}
