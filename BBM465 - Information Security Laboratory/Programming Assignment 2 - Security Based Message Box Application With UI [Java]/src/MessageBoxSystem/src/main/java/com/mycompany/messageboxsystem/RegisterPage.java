package com.mycompany.messageboxsystem;

import javax.swing.JOptionPane;
import java.util.ArrayList;

public class RegisterPage extends javax.swing.JFrame {

    public static final char bullet = '\u2022';
    private boolean isAuthorized = false;
    
    /**
     * Creates new form RegisterPage
     */
    public RegisterPage() {
        setTitle("Message Register Form");
        initComponents();
        
        // Initializing system with existing resources
        FileOperations.initializeSystem();
        
        // Initalizing names of registered users
        for(int i=0; i<FileOperations.getUsers().size(); i++) {
            jComboBox1.addItem(FileOperations.getUsers().get(i).getUserName());
            jComboBox2.addItem(FileOperations.getUsers().get(i).getUserName());
        }
        
        // Converting text inputs (disabling EchoChars)
        jPasswordField3.setEchoChar((char)0);
        jPasswordField4.setEchoChar((char)0);
        jPasswordField5.setEchoChar((char)0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        label5 = new java.awt.Label();
        label6 = new java.awt.Label();
        label7 = new java.awt.Label();
        jComboBox1 = new javax.swing.JComboBox<>();
        jPasswordField1 = new javax.swing.JPasswordField();
        jPasswordField2 = new javax.swing.JPasswordField();
        label10 = new java.awt.Label();
        jComboBox2 = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        label8 = new java.awt.Label();
        label9 = new java.awt.Label();
        jPasswordField3 = new javax.swing.JPasswordField();
        jPasswordField4 = new javax.swing.JPasswordField();
        label11 = new java.awt.Label();
        jPasswordField5 = new javax.swing.JPasswordField();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        label12 = new java.awt.Label();
        label13 = new java.awt.Label();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setToolTipText("");

        jCheckBox1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jCheckBox1.setText("Show Password");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        label5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        label5.setText("Receiver Username (*):");

        label6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        label6.setText("User Password (*):");

        label7.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        label7.setText("Confirm Password (*):");

        jComboBox1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jPasswordField1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jPasswordField2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        label10.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        label10.setText("Auth. Username (*):");

        jComboBox2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPasswordField1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(label7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(20, 20, 20)
                            .addComponent(jPasswordField2, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 0, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPasswordField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.setToolTipText("");

        label8.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        label8.setText("Message Password (*):");

        label9.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        label9.setText("Your Message (*):");

        jPasswordField3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jPasswordField4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        label11.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        label11.setText("Message Codename (*):");

        jPasswordField5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPasswordField4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(label8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPasswordField5, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(label9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(label11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPasswordField3, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(label11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPasswordField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPasswordField5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPasswordField4, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58))
        );

        jButton2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 51, 51));
        jButton2.setText("Send Message");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 51, 51));
        jButton4.setText("Return Homepage");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        label12.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        label12.setText("Warning: Message can't contain underscore (low line) (_) character.");

        label13.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        label13.setText("Warning: Inputs can't contain space character or Turkish characters.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(label12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // Showing and hiding password of message
        if(jCheckBox1.isSelected() == true) {
            jPasswordField1.setEchoChar((char)0);
            jPasswordField2.setEchoChar((char)0);
        } else {
            jPasswordField1.setEchoChar(bullet);
            jPasswordField2.setEchoChar(bullet);
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        // Initializing system with existing resources
        FileOperations.initializeSystem();
        
        isAuthorized = true; 
        
        // Checking authorization
        
        // 1- Inputs must not contain space
        boolean isContainSpace = false;
        if(jPasswordField1.getText().contains(" ") == true || jPasswordField2.getText().contains(" ") == true || jComboBox1.getSelectedItem().toString().contains(" ") == true || jComboBox2.getSelectedItem().toString().contains(" ") == true || jPasswordField3.getText().contains(" ") == true || jPasswordField5.getText().contains(" ") == true) {
            isContainSpace = true;
        }
        if(isContainSpace) { JOptionPane.showMessageDialog(this, "Inputs Must Not Contain Space! Please check your inputs again.","ERROR", JOptionPane.ERROR_MESSAGE); }

        // 2- Inputs must not contain Turkish characters
        boolean isContainTRChar = false;
        if(!isContainSpace) {
            if(jPasswordField1.getText().contains("ğ") == true || jPasswordField2.getText().contains("ğ") == true || jComboBox1.getSelectedItem().toString().contains("ğ") == true || jComboBox2.getSelectedItem().toString().contains("ğ") == true || jPasswordField3.getText().contains("ğ") == true || jPasswordField4.getText().contains("ğ") == true || jPasswordField5.getText().contains("ğ") == true) { isContainTRChar = true; }
            if(jPasswordField1.getText().contains("Ğ") == true || jPasswordField2.getText().contains("Ğ") == true || jComboBox1.getSelectedItem().toString().contains("Ğ") == true || jComboBox2.getSelectedItem().toString().contains("Ğ") == true || jPasswordField3.getText().contains("Ğ") == true || jPasswordField4.getText().contains("Ğ") == true || jPasswordField5.getText().contains("Ğ") == true) { isContainTRChar = true; }
            if(jPasswordField1.getText().contains("ç") == true || jPasswordField2.getText().contains("ç") == true || jComboBox1.getSelectedItem().toString().contains("ç") == true || jComboBox2.getSelectedItem().toString().contains("ç") == true || jPasswordField3.getText().contains("ç") == true || jPasswordField4.getText().contains("ç") == true || jPasswordField5.getText().contains("ç") == true) { isContainTRChar = true; }
            if(jPasswordField1.getText().contains("Ç") == true || jPasswordField2.getText().contains("Ç") == true || jComboBox1.getSelectedItem().toString().contains("Ç") == true || jComboBox2.getSelectedItem().toString().contains("Ç") == true || jPasswordField3.getText().contains("Ç") == true || jPasswordField4.getText().contains("Ç") == true || jPasswordField5.getText().contains("Ç") == true) { isContainTRChar = true; }
            if(jPasswordField1.getText().contains("ş") == true || jPasswordField2.getText().contains("ş") == true || jComboBox1.getSelectedItem().toString().contains("ş") == true || jComboBox2.getSelectedItem().toString().contains("ş") == true || jPasswordField3.getText().contains("ş") == true || jPasswordField4.getText().contains("ş") == true || jPasswordField5.getText().contains("ş") == true) { isContainTRChar = true; }
            if(jPasswordField1.getText().contains("Ş") == true || jPasswordField2.getText().contains("Ş") == true || jComboBox1.getSelectedItem().toString().contains("Ş") == true || jComboBox2.getSelectedItem().toString().contains("Ş") == true || jPasswordField3.getText().contains("Ş") == true || jPasswordField4.getText().contains("Ş") == true || jPasswordField5.getText().contains("Ş") == true) { isContainTRChar = true; }
            if(jPasswordField1.getText().contains("ü") == true || jPasswordField2.getText().contains("ü") == true || jComboBox1.getSelectedItem().toString().contains("ü") == true || jComboBox2.getSelectedItem().toString().contains("ü") == true || jPasswordField3.getText().contains("ü") == true || jPasswordField4.getText().contains("ü") == true || jPasswordField5.getText().contains("ü") == true) { isContainTRChar = true; }
            if(jPasswordField1.getText().contains("Ü") == true || jPasswordField2.getText().contains("Ü") == true || jComboBox1.getSelectedItem().toString().contains("Ü") == true || jComboBox2.getSelectedItem().toString().contains("Ü") == true || jPasswordField3.getText().contains("Ü") == true || jPasswordField4.getText().contains("Ü") == true || jPasswordField5.getText().contains("Ü") == true) { isContainTRChar = true; }
            if(jPasswordField1.getText().contains("ö") == true || jPasswordField2.getText().contains("ö") == true || jComboBox1.getSelectedItem().toString().contains("ö") == true || jComboBox2.getSelectedItem().toString().contains("ö") == true || jPasswordField3.getText().contains("ö") == true || jPasswordField4.getText().contains("ö") == true || jPasswordField5.getText().contains("ö") == true) { isContainTRChar = true; }
            if(jPasswordField1.getText().contains("Ö") == true || jPasswordField2.getText().contains("Ö") == true || jComboBox1.getSelectedItem().toString().contains("Ö") == true || jComboBox2.getSelectedItem().toString().contains("Ö") == true || jPasswordField3.getText().contains("Ö") == true || jPasswordField4.getText().contains("Ö") == true || jPasswordField5.getText().contains("Ö") == true) { isContainTRChar = true; }
            if(jPasswordField1.getText().contains("ı") == true || jPasswordField2.getText().contains("ı") == true || jComboBox1.getSelectedItem().toString().contains("ı") == true || jComboBox2.getSelectedItem().toString().contains("ı") == true || jPasswordField3.getText().contains("ı") == true || jPasswordField4.getText().contains("ı") == true || jPasswordField5.getText().contains("ı") == true) { isContainTRChar = true; }
            if(isContainTRChar) { JOptionPane.showMessageDialog(this, "Inputs Must Not Contain Turkish characters (ğ,ç,ş,ü,ö,ı)! Please check your inputs again.","ERROR", JOptionPane.ERROR_MESSAGE); }
        }
        
        // 3- Message must not contain underscore (_) character
        boolean isContainUnderScore = false;
        if(!isContainTRChar){
            if(jPasswordField4.getText().contains("_") == true) {
                isContainUnderScore = true;
            }
            if(isContainUnderScore) { JOptionPane.showMessageDialog(this, "Your Message Must Not Contain Underscore Character (_)! Please check your inputs again.","ERROR", JOptionPane.ERROR_MESSAGE); }
        }
                
        // 4- Checking whether both of password fields are equal
        boolean arePasswordsSame = false;
        if(!isContainUnderScore){
            if (jPasswordField1.getText().compareTo(jPasswordField2.getText()) == 0) {
                arePasswordsSame = true;
            }
            if (!arePasswordsSame) { JOptionPane.showMessageDialog(this, "Passwords Does Not Match! Please check your inputs again.","ERROR", JOptionPane.ERROR_MESSAGE); }
        }
        
        // 5- Checking username and password match
        boolean didUnPwMatch = false;
        if(arePasswordsSame) {
            for(int i=0; i<FileOperations.getUsers().size(); i++) {
                if(FileOperations.getUsers().get(i).getUserName().compareTo(jComboBox1.getSelectedItem().toString()) == 0 && FileOperations.getUsers().get(i).getPassword().equals(SecurityFunctions.getMD5Hash(jPasswordField1.getText()))) {
                    didUnPwMatch = true;
                }
            }
            if(!didUnPwMatch) { JOptionPane.showMessageDialog(this, "Username or Password Wrong! Please check your inputs or database configruations again.","ERROR", JOptionPane.ERROR_MESSAGE); };
        }

        // 6- Checking sender and receiver (they can't be same person)
        boolean areSeAndReSame = false;
        if(didUnPwMatch) {
            if(jComboBox1.getSelectedItem().toString().compareTo(jComboBox2.getSelectedItem().toString()) != 0){
                areSeAndReSame = true;
            }
            if(!areSeAndReSame) { JOptionPane.showMessageDialog(this, "Sender and Receiver Can't Be Same Person! Please check your inputs again.","ERROR", JOptionPane.ERROR_MESSAGE); }
        }

        // 7- Checking whether inputs are empty
        boolean isInputEmpty = false;
        if(!areSeAndReSame) {
            if(jComboBox1.getSelectedItem().toString().length() == 0) {
                isInputEmpty = true;
            }
            if(jComboBox2.getSelectedItem().toString().length() == 0) {
                isInputEmpty = true;
            }
            if(jPasswordField1.getText().length() == 0) {
                isInputEmpty = true;
            }
            if(jPasswordField2.getText().length() == 0) {
                isInputEmpty = true;
            }
            if(jPasswordField3.getText().length() == 0) {
                isInputEmpty = true;
            }
            if(jPasswordField4.getText().length() == 0) {
                isInputEmpty = true;
            }
            if(jPasswordField5.getText().length() == 0) {
                isInputEmpty = true;
            }
            if(isInputEmpty) { JOptionPane.showMessageDialog(this, "Inputs Can't Be Empty! Please check your inputs again.","ERROR", JOptionPane.ERROR_MESSAGE); }
        }
        
        // 8- Checking whether codename is unique
        boolean isIdUnique = true;
        if(!isInputEmpty) {
            for(int i=0; i<FileOperations.getMessages().size(); i++) {
                if(FileOperations.getMessages().get(i).getMessageId().compareTo(jPasswordField3.getText()) == 0) {
                    isIdUnique = false;
                }
            }
            if(!isIdUnique) { JOptionPane.showMessageDialog(this, "Message Code Must Be Unique! Please check your inputs again.","ERROR", JOptionPane.ERROR_MESSAGE); }
        }
                
        // 9- Determining authorization
        if(isContainSpace || isContainTRChar || isContainUnderScore || !arePasswordsSame || !didUnPwMatch || !areSeAndReSame || isInputEmpty || !isIdUnique) { isAuthorized = false;}
        
        // 10- Sending message and resetting everything if everything is okay
        if(isAuthorized) {
            Message new_msg = new Message(jPasswordField3.getText(), jPasswordField4.getText(), jComboBox1.getSelectedItem().toString(), jComboBox2.getSelectedItem().toString(), SecurityFunctions.getMD5Hash(jPasswordField5.getText()));
            ArrayList<Message> msgs = FileOperations.getMessages();
            msgs.add(new_msg);
            FileOperations.setMessages(msgs);
            jPasswordField1.setText("");
            jPasswordField2.setText("");
            jPasswordField3.setText("");
            jPasswordField4.setText("");
            jPasswordField5.setText("");
            FileOperations.updateMessageDatabase();
            JOptionPane.showMessageDialog(this, "Message Has Been Sent Succesfully!","SUCCESS", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // Returning to main page
        this.hide();
        MainPage jf_main = new MainPage();
        jf_main.pack();
        jf_main.setLocationRelativeTo(null);
        jf_main.show();
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegisterPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegisterPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegisterPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegisterPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegisterPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JPasswordField jPasswordField2;
    private javax.swing.JPasswordField jPasswordField3;
    private javax.swing.JPasswordField jPasswordField4;
    private javax.swing.JPasswordField jPasswordField5;
    private java.awt.Label label10;
    private java.awt.Label label11;
    private java.awt.Label label12;
    private java.awt.Label label13;
    private java.awt.Label label5;
    private java.awt.Label label6;
    private java.awt.Label label7;
    private java.awt.Label label8;
    private java.awt.Label label9;
    // End of variables declaration//GEN-END:variables
}
